[{"type": "human", "data": {"content": "Expl\u00edcame detalladamente los tipos de m\u00f3dulos en Taskyto: Men\u00fa, Acci\u00f3n, Recopilaci\u00f3n de Datos, Preguntas y Respuestas, y Secuencia. Describe el prop\u00f3sito y caracter\u00edsticas de cada uno, c\u00f3mo se interconectan (por ejemplo, la dependencia de los m\u00f3dulos de Acci\u00f3n y Recopilaci\u00f3n de Datos), y el rol de los m\u00f3dulos de Secuencia en flujos complejos. Incluye funciones como el fallback en men\u00fas o el uso de LLMs en Q&A. Quiero una comparativa clara para saber cu\u00e1l usar en cada fase del dise\u00f1o, optimizando estructura y l\u00f3gica del chatbot.", "additional_kwargs": {}, "response_metadata": {}, "type": "human", "name": null, "id": null, "example": false}}, {"type": "ai", "data": {"content": "Aqu\u00ed tienes una explicaci\u00f3n detallada de los tipos de m\u00f3dulos en Taskyto, sus prop\u00f3sitos, caracter\u00edsticas y c\u00f3mo se interconectan. Esto te ayudar\u00e1 a optimizar la estructura y l\u00f3gica de tu chatbot.\n\n### 1. M\u00f3dulo de Men\u00fa\n- **Prop\u00f3sito**: Act\u00faa como el punto de entrada principal para la interacci\u00f3n del usuario. Permite definir opciones de conversaci\u00f3n que el usuario puede elegir.\n- **Caracter\u00edsticas**:\n  - Contiene una presentaci\u00f3n que describe el m\u00f3dulo y c\u00f3mo interactuar con \u00e9l.\n  - Puede incluir un mensaje de fallback que se utiliza cuando el chatbot no entiende la entrada del usuario.\n  - Los elementos del men\u00fa pueden referirse a otros m\u00f3dulos (como m\u00f3dulos de preguntas y respuestas o de recopilaci\u00f3n de datos) o a secuencias de m\u00f3dulos.\n  \n### 2. M\u00f3dulo de Acci\u00f3n\n- **Prop\u00f3sito**: Ejecuta acciones espec\u00edficas basadas en la entrada del usuario. Esto puede incluir c\u00e1lculos, interacciones con bases de datos, o cualquier l\u00f3gica de negocio que necesite ser ejecutada.\n- **Caracter\u00edsticas**:\n  - No tiene una descripci\u00f3n como tal.\n  - Asume que los datos necesarios han sido recopilados previamente por un m\u00f3dulo de recopilaci\u00f3n de datos.\n  - Puede ser referenciado dentro de un m\u00f3dulo de secuencia, pero debe ser precedido por un m\u00f3dulo de recopilaci\u00f3n de datos.\n\n### 3. M\u00f3dulo de Recopilaci\u00f3n de Datos\n- **Prop\u00f3sito**: Solicita informaci\u00f3n espec\u00edfica del usuario que es necesaria para ejecutar acciones o responder preguntas.\n- **Caracter\u00edsticas**:\n  - Define los datos que se deben recopilar, especificando el tipo de cada dato (por ejemplo, string, integer, enum).\n  - Puede incluir una descripci\u00f3n que explique qu\u00e9 datos se necesitan y por qu\u00e9.\n  - Al finalizar la recopilaci\u00f3n de datos, puede ejecutar una acci\u00f3n y proporcionar una respuesta al usuario.\n\n### 4. M\u00f3dulo de Preguntas y Respuestas\n- **Prop\u00f3sito**: Permite al chatbot responder a preguntas espec\u00edficas que los usuarios pueden hacer.\n- **Caracter\u00edsticas**:\n  - Define un conjunto de preguntas y sus respuestas correspondientes.\n  - Utiliza un modelo de lenguaje (LLM) para identificar la pregunta del usuario y proporcionar la respuesta adecuada.\n  - Puede incluir un bloque de ejecuci\u00f3n para realizar acciones adicionales basadas en la pregunta.\n\n### 5. M\u00f3dulo de Secuencia\n- **Prop\u00f3sito**: Permite encadenar varios m\u00f3dulos en un flujo de conversaci\u00f3n m\u00e1s complejo.\n- **Caracter\u00edsticas**:\n  - Se define dentro de un m\u00f3dulo de men\u00fa y puede incluir m\u00faltiples m\u00f3dulos de recopilaci\u00f3n de datos y acci\u00f3n.\n  - Debe tener la opci\u00f3n `memory: full` para mejorar la gesti\u00f3n del contexto de la conversaci\u00f3n.\n  - Facilita la creaci\u00f3n de flujos de conversaci\u00f3n que requieren m\u00faltiples pasos y decisiones.\n\n### Interconexiones y Dependencias\n- **Dependencia de M\u00f3dulos de Acci\u00f3n y Recopilaci\u00f3n de Datos**: Un m\u00f3dulo de acci\u00f3n siempre debe ser precedido por un m\u00f3dulo de recopilaci\u00f3n de datos. Esto asegura que la acci\u00f3n tenga acceso a la informaci\u00f3n necesaria para ejecutarse correctamente.\n- **Uso de LLMs en M\u00f3dulos de Preguntas y Respuestas**: Los m\u00f3dulos de preguntas y respuestas utilizan LLMs para interpretar las preguntas del usuario y proporcionar respuestas precisas, lo que mejora la experiencia del usuario al interactuar con el chatbot.\n\n### Comparativa para el Dise\u00f1o\n- **Fase de Inicio**: Utiliza un m\u00f3dulo de men\u00fa para establecer el contexto y las opciones disponibles para el usuario.\n- **Fase de Recopilaci\u00f3n de Informaci\u00f3n**: Implementa m\u00f3dulos de recopilaci\u00f3n de datos para obtener la informaci\u00f3n necesaria antes de ejecutar acciones.\n- **Fase de Ejecuci\u00f3n**: Usa m\u00f3dulos de acci\u00f3n para procesar la informaci\u00f3n recopilada y realizar c\u00e1lculos o interacciones.\n- **Fase de Respuesta**: Implementa m\u00f3dulos de preguntas y respuestas para manejar consultas espec\u00edficas de los usuarios.\n- **Fase de Flujo Complejo**: Utiliza m\u00f3dulos de secuencia para crear flujos de conversaci\u00f3n que requieren m\u00faltiples pasos y decisiones.\n\nEsta estructura te permitir\u00e1 dise\u00f1ar un chatbot eficiente y l\u00f3gico, optimizando la interacci\u00f3n con los usuarios y asegurando que todas las partes del flujo de conversaci\u00f3n est\u00e9n bien conectadas.\n\nSi necesitas ayuda para implementar alguno de estos m\u00f3dulos en tu proyecto de Taskyto, no dudes en dec\u00edrmelo.", "additional_kwargs": {}, "response_metadata": {}, "type": "ai", "name": null, "id": null, "example": false, "tool_calls": [], "invalid_tool_calls": [], "usage_metadata": null}}]