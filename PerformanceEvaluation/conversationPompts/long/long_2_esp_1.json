[{"type": "human", "data": {"content": "Eres un especialista en crear chatbots con Taskyto. Crea uno para una tienda de ordenadores. El bot debe responder dudas generales y gestionar reservas. Estas pueden ser para recoger un equipo comprado o para llevar uno a reparar. Si es para reparar, el usuario solo debe indicar el problema. Si es para recoger, el bot debe preguntar por la fecha (la tienda abre de 8 a 19 h) y por el tipo y cantidad de ordenadores. Los modelos disponibles son: port\u00e1tiles ($900), sobremesas ($1200), estaciones de trabajo ($2000), mini PCs ($700). El usuario puede pedir varios tipos a la vez, hasta 5 unidades por tipo. El chatbot debe calcular el precio total. No hace falta que el flujo sea perfecto, puede estar algo mezclado (RESPETANDO LA SINTAXIS Y SEM\u00c1NTICA), pero debe cubrir esas funciones. Cada m\u00f3dulo, en una celda yaml distinta.", "additional_kwargs": {}, "response_metadata": {}, "type": "human", "name": null, "id": null, "example": false}}, {"type": "ai", "data": {"content": "Here is the Taskyto YAML content for a chatbot designed for a computer store that can answer general questions and manage reservations for picking up purchased equipment or bringing in equipment for repair. The modules are structured to handle the requirements specified in your prompt.\n\n### Top-Level Module\n```yaml\n# -----> File: top_level.yaml <-----\nmodules:\n- name: top-level\n  kind: menu\n  presentation: |\n    Welcome to the Computer Store chatbot! I can help you with general inquiries and manage your reservations for picking up or repairing equipment.\n  fallback: I'm sorry, I didn't understand that. Could you please rephrase?\n\n  items:\n  - title: General Inquiries\n    kind: module\n    reference: general_inquiries\n  - title: Manage Reservations\n    memory: full\n    kind: module\n    reference: manage_reservations\n```\n\n### General Inquiries Module\n```yaml\n# -----> File: general_inquiries.yaml <-----\nname: general_inquiries\nkind: question_answering\ndescription: This module answers general questions about the computer store.\nquestions:\n- question: What are your opening hours?\n  answer: We are open from 8 AM to 7 PM every day.\n- question: What types of computers do you sell?\n  answer: We sell laptops, desktops, workstations, and mini PCs.\n- question: How can I contact customer support?\n  answer: You can reach us at support@computerstore.com or call us at (555) 123-4567.\n```\n\n### Manage Reservations Module\n```yaml\n# -----> File: manage_reservations.yaml <-----\nname: manage_reservations\nkind: menu\npresentation: |\n  Please choose whether you want to pick up a purchased computer or bring one in for repair.\nfallback: I'm sorry, I didn't understand that. Could you please rephrase?\n\nitems:\n- title: Pick Up a Computer\n  memory: full\n  kind: sequence\n  references:\n    - pick_up_details\n    - calculate_total_price\n- title: Bring in for Repair\n  memory: full\n  kind: module\n  reference: repair_details\n```\n\n### Pick Up Details Module\n```yaml\n# -----> File: pick_up_details.yaml <-----\nname: pick_up_details\nkind: data_gathering\ndescription: |\n  Please provide the date you would like to pick up your computer (between 8 AM and 7 PM) and the type and quantity of computers you wish to pick up.\ndata:\n  - pickup_date: date\n  - computer_type:\n      type: enum\n      values:\n        - laptop\n        - desktop\n        - workstation\n        - mini PC\n  - quantity:\n      type: integer\n\non-success:\n  response:\n    text: \"You have requested to pick up {quantity} {computer_type}(s) on {pickup_date}.\"\n    rephrase: simple\n```\n\n### Repair Details Module\n```yaml\n# -----> File: repair_details.yaml <-----\nname: repair_details\nkind: data_gathering\ndescription: Please describe the problem with your computer for repair.\ndata:\n  - problem_description: string\n\non-success:\n  response:\n    text: \"Thank you for providing the details. We will assess the problem and get back to you shortly.\"\n    rephrase: simple\n```\n\n### Calculate Total Price Module\n```yaml\n# -----> File: calculate_total_price.yaml <-----\nname: calculate_total_price\nkind: action\ndata:\n  - computer_type:\n      type: enum\n      values:\n        - laptop\n        - desktop\n        - workstation\n        - mini PC\n  - quantity:\n      type: integer\n\non-success:\n  execute:\n    language: python\n    code: |\n      prices = {\n          'laptop': 900,\n          'desktop': 1200,\n          'workstation': 2000,\n          'mini PC': 700\n      }\n      total_price = prices[data['computer_type']] * data['quantity']\n      return f\"The total price for {data['quantity']} {data['computer_type']}(s) is ${total_price}.\"\n  response:\n    text: \"{result}\"\n    rephrase: simple\n```\n\nThis structure covers the functionalities you requested, including general inquiries and managing reservations for pickups and repairs. Each module is defined in a separate YAML fragment as requested.", "additional_kwargs": {}, "response_metadata": {}, "type": "ai", "name": null, "id": null, "example": false, "tool_calls": [], "invalid_tool_calls": [], "usage_metadata": null}}]