[{"type": "human", "data": {"content": "Eres un especialista en crear chatbots con Taskyto. Crea uno para una tienda de ordenadores. El bot debe responder dudas generales y gestionar reservas. Estas pueden ser para recoger un equipo comprado o para llevar uno a reparar. Si es para reparar, el usuario solo debe indicar el problema. Si es para recoger, el bot debe preguntar por la fecha (la tienda abre de 8 a 19 h) y por el tipo y cantidad de ordenadores. Los modelos disponibles son: port\u00e1tiles ($900), sobremesas ($1200), estaciones de trabajo ($2000), mini PCs ($700). El usuario puede pedir varios tipos a la vez, hasta 5 unidades por tipo. El chatbot debe calcular el precio total. No hace falta que el flujo sea perfecto, puede estar algo mezclado (RESPETANDO LA SINTAXIS Y SEM\u00c1NTICA), pero debe cubrir esas funciones. Cada m\u00f3dulo, en una celda yaml distinta.", "additional_kwargs": {}, "response_metadata": {}, "type": "human", "name": null, "id": null, "example": false}}, {"type": "ai", "data": {"content": "Here is the complete Taskyto YAML content for a chatbot designed for a computer store. The chatbot will handle general inquiries and manage reservations for picking up purchased equipment or for repairs. The modules are structured to meet the requirements specified in your prompt.\n\n### Top-Level Module\n```yaml\n# -----> File: top_level.yaml <-----\nmodules:\n- name: top-level\n  kind: menu\n  presentation: |\n    Welcome to the Computer Store chatbot! I can help you with general inquiries and manage reservations for picking up your equipment or for repairs.\n  fallback: I'm sorry, I didn't understand that. Could you please rephrase?\n\n  items:\n  - title: General Inquiries\n    kind: module\n    reference: general_inquiries\n  - title: Manage Reservations\n    memory: full\n    kind: module\n    reference: manage_reservations\n```\n\n### General Inquiries Module\n```yaml\n# -----> File: general_inquiries.yaml <-----\nname: general_inquiries\nkind: question_answering\ndescription: This module answers general questions about the computer store.\nquestions:\n- question: What are your opening hours?\n  answer: We are open from 8 AM to 7 PM every day.\n- question: What types of computers do you sell?\n  answer: We sell laptops, desktops, workstations, and mini PCs.\n- question: How much do your computers cost?\n  answer: Laptops are $900, desktops are $1200, workstations are $2000, and mini PCs are $700.\n```\n\n### Manage Reservations Module\n```yaml\n# -----> File: manage_reservations.yaml <-----\nname: manage_reservations\nkind: menu\npresentation: |\n  In this module, you can make a reservation to pick up your purchased equipment or to bring in a computer for repair.\n  Please choose an option.\nfallback: I'm sorry, I didn't understand that. Could you please rephrase?\n\nitems:\n- title: Reserve Pickup\n  memory: full\n  kind: sequence\n  references:\n    - reserve_pickup\n    - calculate_total\n- title: Reserve Repair\n  memory: full\n  kind: sequence\n  references:\n    - reserve_repair\n    - calculate_total\n```\n\n### Reserve Pickup Module\n```yaml\n# -----> File: reserve_pickup.yaml <-----\nname: reserve_pickup\nkind: data_gathering\ndescription: |\n  Please provide the date for your pickup. The store opens from 8 AM to 7 PM. \n  Also, let us know the type and quantity of computers you want to pick up (up to 5 units per type).\ndata:\n  - pickup_date: date\n  - computer_type:\n      type: enum\n      values:\n        - laptop\n        - desktop\n        - workstation\n        - mini_pc\n  - quantity:\n      type: integer\n      required: true\n\non-success:\n  response:\n    text: \"Your pickup for {quantity} {computer_type}(s) is reserved for {pickup_date}.\"\n    rephrase: simple\n```\n\n### Reserve Repair Module\n```yaml\n# -----> File: reserve_repair.yaml <-----\nname: reserve_repair\nkind: data_gathering\ndescription: Please describe the problem with your computer for repair.\ndata:\n  - problem_description: string\n\non-success:\n  response:\n    text: \"Your repair request has been noted. Please describe the problem: {problem_description}.\"\n    rephrase: simple\n```\n\n### Calculate Total Module\n```yaml\n# -----> File: calculate_total.yaml <-----\nname: calculate_total\nkind: action\ndata:\n  - computer_type:\n      type: enum\n      values:\n        - laptop\n        - desktop\n        - workstation\n        - mini_pc\n  - quantity:\n      type: integer\n\non-success:\n  execute:\n    language: python\n    code: |\n      def main(computer_type, quantity):\n          prices = {\n              \"laptop\": 900,\n              \"desktop\": 1200,\n              \"workstation\": 2000,\n              \"mini_pc\": 700\n          }\n          total = prices[computer_type] * quantity\n          return f\"The total price for {quantity} {computer_type}(s) is ${total}.\"\n\n  response:\n    text: \"{result}\"\n    rephrase: simple\n```\n\nThis structure covers the functionalities you requested, including general inquiries and managing reservations for pickups and repairs. Each module is defined in a separate YAML fragment, as you specified.", "additional_kwargs": {}, "response_metadata": {}, "type": "ai", "name": null, "id": null, "example": false, "tool_calls": [], "invalid_tool_calls": [], "usage_metadata": null}}]